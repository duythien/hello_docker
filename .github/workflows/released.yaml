# on:
#   push:
#     tags:
#       - '*'
#     branches:
#       - main
# env:
#   REGISTRY_IMAGE: ghcr.io/duythien/hello_docker
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#     strategy:
#       fail-fast: false
#       matrix:
#         platform:
#           - linux/amd64
#           - linux/arm/v7
#           - linux/arm64
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: GitHub Tag Name example
#         run: |
#           echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
#           echo "Tag name from github.ref_name: ${{  github.ref_name }}"
#       - name: Docker meta
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ env.REGISTRY_IMAGE }}
#           tags: |
#             type=raw,value=latest
#             type=ref,event=tag
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v3
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{github.actor}}
#           password: ${{secrets.GITHUB_TOKEN}}
#       - name: Build and push with tags
#         id: tags
#         if: ${{ github.ref_name != 'main' }}
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           platforms: ${{ matrix.platform }}
#           outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
#       - name: Export digest by tags
#         if: ${{ github.ref_name != 'main' }}
#         run: |
#           mkdir -p /tmp/digests
#           digest="${{ steps.tags.outputs.digest }}"
#           touch "/tmp/digests/${digest#sha256:}" 

#       - name: Build and push with main
#         id: main
#         if: ${{ github.ref_name == 'main' }}
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           provenance: false
#           platforms: ${{ matrix.platform }}
#           labels: ${{ steps.meta.outputs.labels }}
#           outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
#       - name: Export digest
#         if: ${{ github.ref_name == 'main' }}
#         run: |
#           mkdir -p /tmp/digests
#           digest="${{ steps.main.outputs.digest }}"
#           touch "/tmp/digests/${digest#sha256:}"  

#       - name: Upload digest
#         uses: actions/upload-artifact@v3
#         with:
#           name: digests
#           path: /tmp/digests/*
#           if-no-files-found: error
#           retention-days: 1

#   merge:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#     needs:
#       - build
#     steps:
#       - name: Download digests
#         uses: actions/download-artifact@v3
#         with:
#           name: digests
#           path: /tmp/digests
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       - name: Docker meta
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ env.REGISTRY_IMAGE }}
#           tags: |
#             type=raw,value=latest
#             type=ref,event=tag
#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{github.actor}}
#           password: ${{secrets.GITHUB_TOKEN}}
#       - name: Create manifest list and push
#         working-directory: /tmp/digests
#         run: |
#           docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
#             $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
#       - name: Inspect image
#         run: |
#           docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}     
